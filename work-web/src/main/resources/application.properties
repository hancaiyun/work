# Datasource settings
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/work?characterEncoding=utf8&useSSL=false&serverTimezone=UTC&rewriteBatchedStatements=true
#spring.datasource.username=root
#spring.datasource.password=root
#MongoDB
spring.data.mongodb.uri=mongodb://localhost:27017/work

# Hikari
#spring.datasource.type=com.zaxxer.hikari.HikariDataSource
#spring.datasource.hikari.minimum-idle=5
#spring.datasource.hikari.maximum-pool-size=15
#spring.datasource.hikari.auto-commit=true
#spring.datasource.hikari.idle-timeout=30000
#spring.datasource.hikari.pool-name=WorkHikariCP
#spring.datasource.hikari.max-lifetime=1800000
#spring.datasource.hikari.connection-timeout=30000
#spring.datasource.hikari.connection-test-query=SELECT 1
#
#
logger_logback_logpath=/data/appLogs/
#
# Mybatis settings
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.nicehancy.work.dal.model
#
#

# Dubbo settings
dubbo.application.name=work
dubbo.protocol.name=dubbo
dubbo.protocol.port=20880
dubbo.registry.address=zookeeper://127.0.0.1:2181
dubbo.monitor.protocol=registry
#
#
#KAFKA
#spring.kafka.producer.acks=${spring.kafka.producer.acks}
#spring.kafka.producer.bootstrap-servers=${spring.kafka.producer.bootstrap-servers}
#spring.kafka.producer.topicName=${spring.kafka.producer.topicName}
#spring.kafka.producer.client-id=${spring.kafka.producer.client-id}

#consumer
#spring.kafka.consumer.group-id=${spring.kafka.consumer.group-id}
#spring.kafka.consumer.bootstrap-servers=${spring.kafka.consumer.bootstrap-servers}
#spring.kafka.consumer.enable-auto-commit=${spring.kafka.consumer.enable-auto-commit}
#spring.kafka.max.poll.records = ${spring.kafka.max.poll.records}
#spring.kafka.consumer.concurrency =${spring.kafka.consumer.concurrency}

#redis
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.timeout=10000
#spring.redis.database=${spring.redis.database}
#spring.redis.sentinel.master=${spring.redis.sentinel.master}
#spring.redis.sentinel.nodes=${spring.redis.sentinel.nodes}
#spring.redis.pool.max-active=${spring.redis.pool.max-active}
#spring.redis.pool.max-wait=${spring.redis.pool.max-wait}
#spring.redis.pool.max-idle=${spring.redis.pool.max-idle}
#spring.redis.pool.min-idle=${spring.redis.pool.min-idle}

#job
#elaticjob.zookeeper.server-lists=172.17.45.15:2181
#elaticjob.zookeeper.namespace=elastic-job-lite-springboot
#elasticJob.cron.myjob=0/5 * * * * ?
#elasticJob.shardingTotalCount.myjob=2
#elasticJob.shardingItemParameters.myjob=0=p0,1=p1

#容器端口号
server.port= 8088
#容器http请求参数大小限制
server.maxHttpHeaderSize = 102400
#${random.int[10000,19999]}

elaticjob.zookeeper.server-lists = localhost:2181
elaticjob.zookeeper.namespace = elastic-job-lite-springboot
stockJob.cron = 0/5 * * * * ?
stockJob.shardingTotalCount = 4
stockJob.shardingItemParameters = 0=0,1=1,2=0,3=1

#thymeleaf
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.servlet.content-type=text/html
spring.thymeleaf.cache=false

